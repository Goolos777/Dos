#pragma once

#include <vector>
#include <string>

using namespace std;
class FSElement
{
	bool mReadOnly;
	wstring mName;
	FSElement *upFSElement;
	bool isFolder;
	vector<FSElement*>filesSystem;
public:
	FSElement(const bool readOnly, bool isFolder, const wstring& name, FSElement *up)
		:mReadOnly(readOnly), mName(name), upFSElement(up) { vector<FSElement*>filesSystem;	}
	
	void SetReadOnly(const bool readOnly){ mReadOnly=readOnly; }
	void SetName(const wstring& name){ mName = name; }
	virtual void SetSIZE(long size){};
	
	
	void AddFSElement(FSElement* element);
	virtual vector<FSElement*>& GetFilesSystem(){ return filesSystem; };
	void SetUpFSElement(FSElement *up){ upFSElement = up; }
	virtual const FSElement* GetUpFSElement(){ return upFSElement; }
	bool GetisFolder(){ return isFolder; }
	virtual bool GetReadOnly(){ return mReadOnly; }
<<<<<<< HEAD
	const wstring& GetName(){ return mName; }
	virtual const long GetSIZE(){ return 0; }
	const wstring& Print(){ return mName; }
=======
	virtual const wstring& GetName(){ return mName; }
	virtual const long& GetSIZE();
>>>>>>> parent of f5e78a1... one test error
	

	virtual ~FSElement()=0;
};

